wide$AVW <- (exp(wide$avwid))-1
head(wide$AVW)
summary(wide$AVW)
wid_Psi <- ggplot(wide, aes(AVW,wide$Psi))
BRT_Psi_width <- wid_Psi+geom_ribbon(aes(ymin=wide$LCI, ymax=wide$UCI), alpha=0.2) +
stat_summary(fun.y = mean,
geom = "line",
aes(group=1), size = 1.1) +
labs(y='Occupancy Probability (Psi)', x='Mean Wetted Width\n(meters)')+
cleanup
BRT_Psi_width
bare2 <- as.data.frame(read.csv(file.choose()))
names(bare2)
bare2$BB <- (exp(bare2$bnkbare.))-1
head(bare2$BB)
summary(bare2$BB)
bare_Psi <- ggplot(bare2, aes(BB,bare2$X4.Psi))
BRT_Psi_bare <- bare_Psi+geom_ribbon(aes(ymin=bare2$LCI, ymax=bare2$UCI), alpha=0.2) +
stat_summary(fun.y = mean,
geom = "line",
aes(group=1), size = 1.1) +
labs(y='Occupancy Probability (Psi)', x='Bare Bank Severity')+
cleanup
BRT_Psi_bare
#------------------------------------------------------------------------------------
#Full figure for BRT PSI
library(gridExtra)
BRT_Psi <- grid.arrange(BRTp,BRT_Psi_width,BRT_Psi_bare, ncol=3, nrow=1)
bkt_real <- as.data.frame(read.csv(file.choose()))
head(bkt_real)
real1 <- ggplot(bkt_real, aes(x=Parameter, y=Estimate, colour=supp))+
geom_errorbar(aes(ymin=bkt_real$LCI, ymax=bkt_real$UCI),
width=.1)+
geom_point()
real1
real1 <- ggplot(bkt_real, aes(x=Parameter, y=Estimate))+
geom_errorbar(aes(ymin=bkt_real$LCI, ymax=bkt_real$UCI),
width=.1)+
geom_point()
real1
real1 <- ggplot(bkt_real, aes(x=Parameter, y=Estimate))+
geom_errorbar(aes(ymin=bkt_real$LCI, ymax=bkt_real$UCI),
width=.1)+
geom_point()+
cleanup
real1
real1 <- ggplot(bkt_real, aes(x=Parameter, y=Estimate))+
geom_errorbar(aes(ymin=bkt_real$LCI, ymax=bkt_real$UCI),
width=.05)+
geom_point()+
cleanup
real1
real1 <- ggplot(bkt_real, aes(x=Parameter, y=Estimate, colour=Parameter))+
geom_errorbar(aes(ymin=bkt_real$LCI, ymax=bkt_real$UCI),
width=.05)+
geom_point()+
cleanup
real1
real1 <- ggplot(bkt_real, aes(x=Parameter, y=Estimate, colour=Parameter))+
geom_errorbar(aes(ymin=bkt_real$LCI, ymax=bkt_real$UCI),
width=.05, colour="black")+
geom_point(size=3, shape=21)+
cleanup
real1
real1 <- ggplot(bkt_real, aes(x=Parameter, y=Estimate, colour=Parameter))+
geom_errorbar(aes(ymin=bkt_real$LCI, ymax=bkt_real$UCI),
width=.05, colour="black")+
geom_point(size=3, shape=2)+
cleanup
real1
real1 <- ggplot(bkt_real, aes(x=Parameter, y=Estimate, colour=Parameter))+
geom_errorbar(aes(ymin=bkt_real$LCI, ymax=bkt_real$UCI),
width=.05, colour="black")+
geom_point(size=5, shape=21, fill=Parameter)+
cleanup
real1
real1 <- ggplot(bkt_real, aes(x=Parameter, y=Estimate, colour=Parameter))+
geom_errorbar(aes(ymin=bkt_real$LCI, ymax=bkt_real$UCI),
width=.05, colour="black")+
geom_point(size=5, shape=21, fill="white")+
cleanup
real1
real1 <- ggplot(bkt_real, aes(x=Parameter, y=Estimate, colour=Parameter))+
geom_errorbar(aes(ymin=bkt_real$LCI, ymax=bkt_real$UCI),
width=.05, colour="black")+
geom_point(size=5, shape=21, fill="white")+
scale_y_continuous(breaks = 0:1*.1)+
theme(legend.position = c(1,0))+
cleanup
real1
real1 <- ggplot(bkt_real, aes(x=Parameter, y=Estimate, colour=Parameter))+
geom_errorbar(aes(ymin=bkt_real$LCI, ymax=bkt_real$UCI),
width=.05, colour="black")+
geom_point(size=5, shape=21, fill="white")+
scale_y_continuous(breaks = 0:10*.1)+
theme(legend.position = c(1,0))+
cleanup
real1
real1 <- ggplot(bkt_real, aes(x=Parameter, y=Estimate, colour=Parameter))+
geom_errorbar(aes(ymin=bkt_real$LCI, ymax=bkt_real$UCI),
width=.05, colour="black")+
geom_point(size=5, shape=21, fill="white")+
scale_y_continuous(breaks = 0:11*.1)+
cleanup
real1
real1 <- ggplot(bkt_real, aes(x=Parameter, y=Estimate, colour=Parameter))+
geom_errorbar(aes(ymin=bkt_real$LCI, ymax=bkt_real$UCI),
width=.05, colour="black")+
geom_point(size=5, shape=21, fill="white")+
scale_y_continuous(breaks = 0:12*.1)+
cleanup
real1
real1 <- ggplot(bkt_real, aes(x=Parameter, y=Estimate, colour=Parameter))+
geom_errorbar(aes(ymin=bkt_real$LCI, ymax=bkt_real$UCI),
width=.05, colour="black")+
geom_point(size=5, shape=21, fill="white")+
scale_y_continuous(breaks = 0:12*.1)+
theme(legend.position = "none")+
cleanup
real1
real1 <- ggplot(bkt_real, aes(x=Parameter, y=Estimate, colour=Parameter))+
geom_errorbar(aes(ymin=bkt_real$LCI, ymax=bkt_real$UCI),
width=.05, colour="black")+
geom_point(size=5)+
scale_y_continuous(breaks = 0:12*.1)+
theme(legend.position = "none")+
cleanup
real1
BRTp
BRTp <- shock_DProb+geom_ribbon(aes(ymin=shock$LCI, ymax=shock$UCI), alpha=0.2) +
stat_summary(fun.y = mean,
geom = "line",
aes(group=1), size = 1.1) +
labs(y='Detection Probability (p)', x='Electrofishing Effort\n(sec)')+
theme(axis.title.x = element_text(size = 14))+
theme(axis.title.y = element_text(size = 14))+
cleanup
BRTp
BRT_Psi_width <- wid_Psi+geom_ribbon(aes(ymin=wide$LCI, ymax=wide$UCI), alpha=0.2) +
stat_summary(fun.y = mean,
geom = "line",
aes(group=1), size = 1.1) +
labs(y='Occupancy Probability (Psi)', x='Mean Wetted Width\n(meters)')+
theme(axis.title.x = element_text(size = 14))+
theme(axis.title.y = element_text(size = 14))+
cleanup
BRT_Psi_width
BRT_Psi_bare <- bare_Psi+geom_ribbon(aes(ymin=bare2$LCI, ymax=bare2$UCI), alpha=0.2) +
stat_summary(fun.y = mean,
geom = "line",
aes(group=1), size = 1.1) +
labs(y='Occupancy Probability (Psi)', x='Bare Bank Severity')+
theme(axis.title.x = element_text(size = 14))+
theme(axis.title.y = element_text(size = 14))+
cleanup
BRT_Psi_bare
run <- as.data.frame(read.csv(file.choose()))
names(run)
run$pctrunEX <- (exp(run$pctrun))-1
head(run$pctrunEX)
summary(run$pctrunEX)
run_Psi <- ggplot(run, aes(pctrunEX,run$Psi))
BRT_Psi_run <- run_Psi+geom_ribbon(aes(ymin=run$LCI, ymax=run$UCI), alpha=0.2) +
stat_summary(fun.y = mean,
geom = "line",
aes(group=1), size = 1.1) +
labs(y='Occupancy Probability (Psi)', x='Percent Run Habitat')+
theme(axis.title.x = element_text(size = 14))+
theme(axis.title.y = element_text(size = 14))+
cleanup
BRT_Psi_run
BRT_Psi <- grid.arrange(BRT_Psi_width,BRT_Psi_bare,BRT_Psi_run, ncol=3, nrow=1)
cleanup
BRT_Psi_run <- run_Psi+geom_ribbon(aes(ymin=run$LCI, ymax=run$UCI), alpha=0.2) +
stat_summary(fun.y = mean,
geom = "line",
aes(group=1), size = 1.1) +
labs(y='Occupancy Probability (Psi)', x='Percent Run Habitat')+
theme(axis.title.x = element_text(size = 14))+
theme(axis.title.y = element_text(size = 14))+
ylim(0,1)+
xlim(0,1)+
cleanup
BRT_Psi_run
BRT_Psi_run <- run_Psi+geom_ribbon(aes(ymin=run$LCI, ymax=run$UCI), alpha=0.2) +
stat_summary(fun.y = mean,
geom = "line",
aes(group=1), size = 1.1) +
labs(y='Occupancy Probability (Psi)', x='Percent Run Habitat')+
theme(axis.title.x = element_text(size = 14))+
theme(axis.title.y = element_text(size = 14))+
ylim(0,1)+
cleanup
BRT_Psi_run
BRT_Psi_run <- run_Psi+geom_ribbon(aes(ymin=run$LCI, ymax=run$UCI), alpha=0.2) +
stat_summary(fun.y = mean,
geom = "line",
aes(group=1), size = 1.1) +
labs(y='Occupancy Probability (Psi)', x='Percent Run Habitat')+
theme(axis.title.x = element_text(size = 14))+
theme(axis.title.y = element_text(size = 14))+
ylim(0,1)+
xlim(min(run$pctrunEX),1)+
cleanup
BRT_Psi_run
BRT_Psi_run <- run_Psi+geom_ribbon(aes(ymin=run$LCI, ymax=run$UCI), alpha=0.2) +
stat_summary(fun.y = mean,
geom = "line",
aes(group=1), size = 1.1) +
labs(y='Occupancy Probability (Psi)', x='Percent Run Habitat')+
theme(axis.title.x = element_text(size = 14))+
theme(axis.title.y = element_text(size = 14))+
ylim(0,1)+
xlim(min(run$pctrunEX),max(run$pctrunEX))+
cleanup
BRT_Psi_run
BRT_Psi <- grid.arrange(BRT_Psi_width,BRT_Psi_bare,BRT_Psi_run, ncol=3, nrow=1)
library(ggplot2)
setwd("~/Brook Trout_Brett/Data 2018/Analysis/AFS and Driftless")
#load data
original <- as.data.frame(read.csv(file.choose()))
head(original)
names(original)
library(ggplot2)
#calculate CPUE for LND, SRD, Sculpins, and Top Carnivores
original$Eff_hr <- (original$eff.min./60)
head(original$Eff_hr)
original$LND_cpue <- (original$LND_ab/original$Eff_hr)
hist(original$LND_cpue)
original$SRD_cpue <- (original$SRD_ab/original$Eff_hr)
hist(original$SRD_cpue)
original$Sculpin_cpue <- (original$Sculpins_ab/original$Eff_hr)
hist(original$Sculpin_cpue)
original$TC_cpue <- (original$Top.Carnivore/original$Eff_hr)
hist(original$TC_cpue)
#Log Transform all data
names(original)
logged <- as.data.frame(log(1+original[,11:57]))
names(logged)  #New DF for analysis --- !!! Presence/Absence still in "original" DF
pres <- as.data.frame(original[,1:8])
head(pres)
#convert 1s and 0s to "character" in presence
class(pres$LND)
pres$LND <- as.factor(pres$LND)
pres$SRD <- as.factor(pres$SRD)
pres$Sculpins <- as.factor(pres$Sculpins)
class(pres$LND)
Lmod1 <- lm(LND_cpue ~ temp + avwid + pctfines + pctRiffle + AVembed + logged$bnkbare., data = logged)
summary(Lmod1)
Lmod2 <- lm(LND_cpue ~ temp + avwid + pctfines + AVembed + logged$bnkbare., data = logged)
summary(Lmod2)
Lmod3 <- lm(LND_cpue ~ temp + avwid + pctfines + logged$bnkbare., data = logged)
summary(Lmod3)
Lmod4 <- lm(LND_cpue ~ temp + pctfines + logged$bnkbare., data = logged)
summary(Lmod4)
Lmod5 <- lm(LND_cpue ~ temp + pctfines, data = logged)
summary(Lmod5)
AIC(Lmod1,Lmod2,Lmod3,Lmod4,Lmod5)
Lmod6 <- lm(LND_cpue ~ temp + sdwid + pctfines + pctslow + pctEmb1, data = logged)
summary(Lmod6)
AIC(Lmod6)
Lmod7 <- lm(LND_cpue ~ temp + avdep + pctfines + mFlow, data = logged)
summary(Lmod7)
AIC(Lmod7)
Lmod8 <- lm(LND_cpue ~ temp + pctfines + W.D, data = logged)
summary(Lmod8)
AIC(Lmod8)
plot(logged$LND_cpue, logged$bnkbare.)
Lmod9 <- lm(LND_cpue ~ temp + pctfines + logged$BRTcpue.fish.min., data = logged)
summary(Lmod9)
AIC(Lmod9)
#Model Comparisons
AIC(Lmod1,Lmod2,Lmod3,Lmod4,Lmod5,Lmod6, Lmod7, Lmod8, Lmod9)
summary(Lmod3)
Lmod10 <- lm(LND_cpue ~ temp + avwid + pctfines, data = logged)
summary(Lmod10)
AIC(Lmod10)
Lplot1 <- ggplot(original, aes(x=original$temp, y=original$LND_ab)) +geom_point()+
geom_jitter() + geom_smooth(method = 'lm')+
theme_bw() + theme(panel.grid = element_blank(), panel.border = element_blank(),
axis.line = element_line(colour = "black"))+
labs(x='Stream Temperature\n(Celcius)', y='Longnose Dace CPUE\n(fish per minute)') +
theme(axis.title.x = element_text(size = 15, color = 'black'), axis.title.y = element_text(size = 15, color = 'black'),
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
theme(legend.position = "none")
Lplot1
Lplot1 <- ggplot(original, aes(x=original$temp, y=original$LND_cpue)) +geom_point()+
geom_jitter() + geom_smooth(method = 'lm')+
theme_bw() + theme(panel.grid = element_blank(), panel.border = element_blank(),
axis.line = element_line(colour = "black"))+
labs(x='Stream Temperature\n(Celcius)', y='Longnose Dace CPUE\n(fish per minute)') +
theme(axis.title.x = element_text(size = 15, color = 'black'), axis.title.y = element_text(size = 15, color = 'black'),
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
theme(legend.position = "none")
Lplot1
Lplot2 <- ggplot(original, aes(x=original$pctfines, y=original$LND_cpue)) +geom_point()+
geom_jitter() + geom_smooth(method = 'lm')+
theme_bw() + theme(panel.grid = element_blank(), panel.border = element_blank(),
axis.line = element_line(colour = "black"))+
labs(x='Percent of Fine Substrates\n(clay,silt,sand)', y='Longnose Dace CPUE\n(fish per minute)') +
theme(axis.title.x = element_text(size = 15, color = 'black'), axis.title.y = element_text(size = 15, color = 'black'),
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
theme(legend.position = "none")
Lplot2
Lplot3 <- ggplot(original, aes(x=original$avwid, y=original$LND_cpue)) +geom_point()+
geom_jitter() + geom_smooth(method = 'lm')+
theme_bw() + theme(panel.grid = element_blank(), panel.border = element_blank(),
axis.line = element_line(colour = "black"))+
labs(x='Mean Wetted Width\n(meters)', y='Longnose Dace CPUE\n(fish per minute)') +
theme(axis.title.x = element_text(size = 15, color = 'black'), axis.title.y = element_text(size = 15, color = 'black'),
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
theme(legend.position = "none")
Lplot3
Lmod13 <- lm(LND_cpue ~ temp + avwid^2 + pctfines, data = logged)
summary(Lmod13)
AIC(Lmod13)
library(gridExtra)
LND_mlr_grid <- grid.arrange(Lplot1,Lplot2,Lplot3, ncol=3, nrow=1)
#-------------------------------------------------
# Southern Redbelly Dace
#_________________________________________________
#MLR for SRD abundance (CPUE)
SRmod1 <- lm(SRD_cpue ~ temp + avwid + pctfines + pctRiffle + AVembed + logged$bnkbare. + AvChnlOpen, data = logged)
summary(SRmod1)
SRmod1 <- lm(SRD_cpue ~ temp + avwid + pctfines + pctRiffle + AVembed + logged$bnkbare. + logged$AvChnlOpen., data = logged)
summary(SRmod1)
#MLR for SRD abundance (CPUE)
names(logged)
SRmod2 <- lm(SRD_cpue ~ temp + avdep + pctcbbl + pctrun, data = logged)
summary(SRmod2)
logged <- as.data.frame(log(1+original[,11:58]))
#MLR for SRD abundance (CPUE)
names(logged)
SRmod3 <- lm(SRD_cpue ~ temp + TC_cpue, data = logged)
summary(SRmod3)
SRmod4 <- lm(SRD_cpue ~ temp + TC_cpue + maxdep + mFlow + pctslow, data = logged)
summary(SRmod4)
SRmod6 <- lm(SRD_cpue ~ temp + TC_cpue + Avbnka, data = logged)
summary(SRmod6)
AIC(SRmod1,SRmod2,SRmod3, SRmod4, SRmod6)
SRplot1 <- ggplot(original, aes(x=original$temp, y=original$SRD_cpue)) +geom_point()+
geom_jitter() + geom_smooth(method = 'lm')+
theme_bw() + theme(panel.grid = element_blank(), panel.border = element_blank(),
axis.line = element_line(colour = "black"))+
labs(x='Stream Temperature\n(Celcius)', y='Southern Redbelly Dace CPUE\n(fish per minute)') +
theme(axis.title.x = element_text(size = 15, color = 'black'), axis.title.y = element_text(size = 15, color = 'black'),
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
theme(legend.position = "none")
SRplot1
Lplot1 <- ggplot(original, aes(x=original$temp, y=original$LND_cpue)) +geom_point()+
geom_jitter() + geom_smooth(method = 'lm')+
theme_bw() + theme(panel.grid = element_blank(), panel.border = element_blank(),
axis.line = element_line(colour = "black"))+
labs(x='Stream Temperature\n(Celcius)', y='Longnose Dace CPUE\n(fish per hour)') +
theme(axis.title.x = element_text(size = 15, color = 'black'), axis.title.y = element_text(size = 15, color = 'black'),
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
theme(legend.position = "none")
Lplot1
Lplot2 <- ggplot(original, aes(x=original$pctfines, y=original$LND_cpue)) +geom_point()+
geom_jitter() + geom_smooth(method = 'lm')+
theme_bw() + theme(panel.grid = element_blank(), panel.border = element_blank(),
axis.line = element_line(colour = "black"))+
labs(x='Percent of Fine Substrates\n(clay,silt,sand)', y='Longnose Dace CPUE\n(fish per hour)') +
theme(axis.title.x = element_text(size = 15, color = 'black'), axis.title.y = element_text(size = 15, color = 'black'),
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
theme(legend.position = "none")
Lplot2
Lplot3 <- ggplot(original, aes(x=original$avwid, y=original$LND_cpue)) +geom_point()+
geom_jitter() + geom_smooth(method = 'lm')+
theme_bw() + theme(panel.grid = element_blank(), panel.border = element_blank(),
axis.line = element_line(colour = "black"))+
labs(x='Mean Wetted Width\n(meters)', y='Longnose Dace CPUE\n(fish per hour)') +
theme(axis.title.x = element_text(size = 15, color = 'black'), axis.title.y = element_text(size = 15, color = 'black'),
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
theme(legend.position = "none")
Lplot3
library(gridExtra)
LND_mlr_grid <- grid.arrange(Lplot1,Lplot2,Lplot3, ncol=3, nrow=1)
SRplot2 <- ggplot(original, aes(x=original$temp, y=original$TC_cpue)) +geom_point()+
geom_jitter() + geom_smooth(method = 'lm')+
theme_bw() + theme(panel.grid = element_blank(), panel.border = element_blank(),
axis.line = element_line(colour = "black"))+
labs(x='Top Carnivore CPUE\n(fish per hour)', y='Southern Redbelly Dace CPUE\n(fish per hour)') +
theme(axis.title.x = element_text(size = 15, color = 'black'), axis.title.y = element_text(size = 15, color = 'black'),
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
theme(legend.position = "none")
SRplot2
SRplot2 <- ggplot(original, aes(x=original$TC_cpue, y=original$SRD_cpue)) +geom_point()+
geom_jitter() + geom_smooth(method = 'lm')+
theme_bw() + theme(panel.grid = element_blank(), panel.border = element_blank(),
axis.line = element_line(colour = "black"))+
labs(x='Top Carnivore CPUE\n(fish per hour)', y='Southern Redbelly Dace CPUE\n(fish per hour)') +
theme(axis.title.x = element_text(size = 15, color = 'black'), axis.title.y = element_text(size = 15, color = 'black'),
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
theme(legend.position = "none")
SRplot2
SRD_mlr_grid <- grid.arrange(SRplot1,SRplot2, ncol=2, nrow=1)
#MLR for Sculpin abundance (CPUE)
names(logged)
SCmod1 <- lm(SRD_cpue ~ temp + avwid + pctcbbl + pctRiffle + pctEmb1 + logged$bnkbare. + logged$AvChnlOpen., data = logged)
summary(SCmod1)
SCmod2 <- lm(SRD_cpue ~ temp + avdep + TC_cpue + bnkbare., data = logged)
summary(SCmod2)
SCmod2 <- lm(SRD_cpue ~ temp + TC_cpue, data = logged)
summary(SCmod2)
SCmod2 <- lm(SRD_cpue ~ temp + avdep + TC_cpue + bnkbare., data = logged)
summary(SCmod2)
SCmod3 <- lm(SRD_cpue ~ temp + TC_cpue, data = logged)
summary(SCmod3)
SCmod4 <- lm(SRD_cpue ~ temp + TC_cpue, data = logged)
summary(SCmod4)
SCmod4 <- lm(SRD_cpue ~ temp + TC_cpue + pctfines + pctslow, data = logged)
summary(SCmod4)
SCmod5 <- lm(SRD_cpue ~ temp + TC_cpue + mFlow + FWD + boulder + under, data = logged)
summary(SCmod5)
#MLR for Sculpin abundance (CPUE)
names(logged)
SCmod1 <- lm(Sculpin_cpue ~ temp + avwid + pctcbbl + pctRiffle + pctEmb1 + logged$bnkbare. + logged$AvChnlOpen., data = logged)
summary(SCmod1)
SCmod2 <- lm(Sculpin_cpue ~ temp + avdep + TC_cpue + bnkbare., data = logged)
summary(SCmod2)
SCmod3 <- lm(Sculpin_cpue ~ temp + TC_cpue, data = logged)
summary(SCmod3)
SCmod4 <- lm(Sculpin_cpue ~ temp + TC_cpue + pctfines + pctslow, data = logged)
summary(SCmod4)
SCmod5 <- lm(Sculpin_cpue ~ temp + TC_cpue + mFlow + FWD + boulder + under, data = logged)
summary(SCmod5)
SCmod6 <- lm(Sculpin_cpue ~ temp + TC_cpue + LWD, data = logged)
summary(SCmod6)
SCmod7 <- lm(Sculpin_cpue ~ avwid + pctslow + boulder + logged$bnkbare. + TC_cpue, data = logged)
summary(SCmod7)
AIC(SCmod1,SCmod2,SCmod3,SCmod4,SCmod5,SCmod6,SCmod7)
SCmod8 <- lm(Sculpin_cpue ~ pctslow + boulder, data = logged)
summary(SCmod8)
AIC(SCmod1,SCmod2,SCmod3,SCmod4,SCmod5,SCmod6,SCmod7,SCmod8)
SCmod8 <- lm(Sculpin_cpue ~ pctslow + boulder + TC_cpue, data = logged)
summary(SCmod8)
AIC(SCmod1,SCmod2,SCmod3,SCmod4,SCmod5,SCmod6,SCmod7,SCmod8)
SCplot1 <- ggplot(original, aes(x=original$pctslow, y=original$Sculpin_cpue)) +geom_point()+
geom_jitter() + geom_smooth(method = 'lm')+
theme_bw() + theme(panel.grid = element_blank(), panel.border = element_blank(),
axis.line = element_line(colour = "black"))+
labs(x='Percent Slow Moving Habitat\n(Glide, Pool)', y='Sculpin CPUE\n(fish per hour)') +
theme(axis.title.x = element_text(size = 15, color = 'black'), axis.title.y = element_text(size = 15, color = 'black'),
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
theme(legend.position = "none")
SCplot1
SCplot2 <- ggplot(original, aes(x=original$boulder, y=original$Sculpin_cpue)) +geom_point()+
geom_jitter() + geom_smooth(method = 'lm')+
theme_bw() + theme(panel.grid = element_blank(), panel.border = element_blank(),
axis.line = element_line(colour = "black"))+
labs(x='Percent Boulder Habitat', y='Sculpin CPUE\n(fish per hour)') +
theme(axis.title.x = element_text(size = 15, color = 'black'), axis.title.y = element_text(size = 15, color = 'black'),
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
theme(legend.position = "none")
SCplot2
SCplot3 <- ggplot(original, aes(x=original$TC_cpue, y=original$Sculpin_cpue)) +geom_point()+
geom_jitter() + geom_smooth(method = 'lm')+
theme_bw() + theme(panel.grid = element_blank(), panel.border = element_blank(),
axis.line = element_line(colour = "black"))+
labs(x='Top Carnivore CPUE\n(fish per hour)', y='Sculpin CPUE\n(fish per hour)') +
theme(axis.title.x = element_text(size = 15, color = 'black'), axis.title.y = element_text(size = 15, color = 'black'),
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
theme(legend.position = "none")
SCplot3
Sculpin_mlr_grid <- grid.arrange(SCplot1,SCplot2,SCplot3, ncol=3, nrow=1)
ibi <- as.data.frame(read.csv(file.choose()))
names(ibi)
hist(ibi$IBI.Score)
plot(ibi$BKT, ibi$IBI.Score)
boxplot1 <- ggplot(ibi, aes(BKT, ibi$IBI.Score, fill = BKT)) + geom_boxplot(width=.50, notch=F)+
theme_bw() + theme(panel.grid = element_blank(), panel.border = element_blank(),
axis.line = element_line(colour = "black")) +
scale_fill_brewer(palette = "Reds") +
labs(y='Coldwater FIBI Score') +
theme(axis.title.x = element_blank(), axis.title.y = element_text(size = 15, color = 'black'),
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
theme(legend.position = "none")+
scale_x_discrete(labels = c("Absent","Present"))
boxplot1
library(ggplot2)
boxplot1 <- ggplot(ibi, aes(ibi$BKT, ibi$IBI.Score, fill = ibi$BKT)) + geom_boxplot(width=.50, notch=F)+
theme_bw() + theme(panel.grid = element_blank(), panel.border = element_blank(),
axis.line = element_line(colour = "black")) +
scale_fill_brewer(palette = "Reds") +
labs(y='Coldwater FIBI Score') +
theme(axis.title.x = element_blank(), axis.title.y = element_text(size = 15, color = 'black'),
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
theme(legend.position = "none")+
scale_x_discrete(labels = c("Absent","Present"))
boxplot1
boxplot1
boxplot(ibi$IBI.Score ~ ibi$BKT, xlab = "BKT Presence", ylab = "Coldwater FIBI Score")
bkt_ibi_AOV <- aov(ibi$IBI.Score ~ ibi$BKT)
summary(bkt_ibi_AOV)
summary(ibi$IBI.Score)
names(ibi)
Brook <- subset(ibi, BKT == 1, select = c("Site..", "IBI.Score"))
head(Brook)
summary(Brook$IBI.Score)
Brook
ibi <- as.data.frame(read.csv(file.choose()))
#histogram of ibi scores
hist(ibi$IBI.Score)
boxplot(ibi$IBI.Score ~ ibi$BKT, xlab = "BKT Presence", ylab = "Coldwater FIBI Score")
summary(ibi$IBI.Score)
bkt_ibi_AOV <- aov(ibi$IBI.Score ~ ibi$BKT)
summary(bkt_ibi_AOV)
Brook <- subset(ibi, BKT == 1, select = c("Site..", "IBI.Score"))
head(Brook)
summary(Brook$IBI.Score)
Brook
